[{"/Users/gary1690/Flatiron/code/portfolio-smooth/src/App.js":"1","/Users/gary1690/Flatiron/code/portfolio-smooth/src/index.js":"2","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/layout.js":"3","/Users/gary1690/Flatiron/code/portfolio-smooth/src/reportWebVitals.js":"4","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/header.js":"5","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/home/home.js":"6","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/about/about.js":"7","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/resume/resume.js":"8","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/projects/projects.js":"9","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/projects/projects-list.js":"10","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/footer.js":"11"},{"size":411,"mtime":1612380472576,"results":"12","hashOfConfig":"13"},{"size":502,"mtime":1612118606036,"results":"14","hashOfConfig":"13"},{"size":284,"mtime":1612321197229,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1612051183600,"results":"16","hashOfConfig":"13"},{"size":1691,"mtime":1612392283120,"results":"17","hashOfConfig":"13"},{"size":2415,"mtime":1612463786727,"results":"18","hashOfConfig":"13"},{"size":1683,"mtime":1612750002666,"results":"19","hashOfConfig":"13"},{"size":2275,"mtime":1612463808082,"results":"20","hashOfConfig":"13"},{"size":2799,"mtime":1612463799344,"results":"21","hashOfConfig":"13"},{"size":1155,"mtime":1612392929430,"results":"22","hashOfConfig":"13"},{"size":172,"mtime":1612128047811,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1w33i27",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/gary1690/Flatiron/code/portfolio-smooth/src/App.js",[],["48","49"],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/index.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/layout.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/reportWebVitals.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/header.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/home/home.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/about/about.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/resume/resume.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/projects/projects.js",["50"],"import React from 'react';\nimport {Card,Tooltip,OverlayTrigger} from 'react-bootstrap';\nimport projectList from './projects-list';\n\n\n\nconst Projects = () => {\n  return (\n    <div id=\"projects\" className=\"section projects\" >\n      <div className=\"center\">\n        <h3 className=\"resume-title text-center text-white m-5\">Projects</h3>\n        <div className=\"d-flex flex-variant\">\n          {projectList.map( (x,index)=> {\n            return (\n              <Card key={index} style={{ width: '18rem',color:'black',margin:\"1em\" }}>\n                <div className=\"d-none d-md-block\">\n                  <Card.Img variant=\"top\" src={x.image}/>\n                </div>\n                <Card.Body>\n                  <Card.Title>{x.name}</Card.Title>\n                  <Card.Text>\n                    {x.desc}\n                  </Card.Text>\n                </Card.Body>\n                <Card.Body>\n                  {x.demo && <CardButton icon={\"fa fa-youtube-square\"} url={x.demo} tooltip={\"Demo\"}/> }\n                  {x.repo.backend && <CardButton icon={\"fa fa-file-code-o\"} url={x.repo.backend} tooltip ={\"Backend\"}/> }\n                  {x.repo.frontend && <CardButton icon={\"fa fa-code\"} url={x.repo.frontend} tooltip ={\"Frontend\"}/> }\n                </Card.Body>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CardButton = (props) =>{\n  return (\n    <OverlayTrigger\n    placement=\"top\"\n    overlay={<Tooltip id=\"button-tooltip-2\">{props.tooltip}</Tooltip>}\n  >\n    {({ ref, ...triggerHandler }) => (\n       <a className=\"card-icon\" {...triggerHandler} id=\"card-icon\" href ={props.url} aria-describedby=\"tooltip\" rel=\"noreferrer\" target=\"_blank\">\n        <i className={props.icon} aria-hidden=\"true\" ref={ref}></i>\n       </a>\n    )}\n  </OverlayTrigger>\n  )\n}\n\nexport default Projects\n\n\n{/* <div className=\"d-flex flex-variant\">\n  {projectList.map( (x,index)=> {\n    return (\n        <Card key={index} style={{ width: '18rem',color:'black',margin:\"1em\" }}>\n          <div className=\"d-none d-md-block\">\n            <Card.Img variant=\"top\" src={x.image}/>\n          </div>\n          <Card.Body>\n            <Card.Title>{x.name}</Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the bulk of\n              the card's content.\n            </Card.Text>\n          </Card.Body>\n          <Card.Body>\n            {x.demo && <CardButton icon={\"fa fa-youtube-square\"} url={x.demo} tooltip={\"Demo\"}/> }\n            {x.repo.backend && <CardButton icon={\"fa fa-file-code-o\"} url={x.repo.backend} tooltip ={\"Backend\"}/> }\n            {x.repo.frontend && <CardButton icon={\"fa fa-code\"} url={x.repo.frontend} tooltip ={\"Frontend\"}/> }\n          </Card.Body>\n        </Card>\n    )\n  })}\n</div> */}","/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/projects/projects-list.js",[],"/Users/gary1690/Flatiron/code/portfolio-smooth/src/components/layout/footer.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":57,"column":1,"nodeType":"57","messageId":"58","endLine":79,"endColumn":11},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]